const { Telegraf, Markup } = require('telegraf')
const { message } = require('telegraf/filters')
const path = require('path')
const fs = require('fs')
require("dotenv").config()
const express = require('express');
const { MainText, Instruction1, Instruction2, urlJet, urlMines, promoMines, promoJet } = require('./function')


const app = express();
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN
const VERCEL_URL = process.env.VERCEL_URL
// console.log(BOT_TOKEN,"1");
// console.log(VERCEL_URL,"2");

const BOT_TOKEN_REF = process.env.BOT_TOKEN_REF2


const botRef = new Telegraf(BOT_TOKEN_REF)
const bot = new Telegraf(BOT_TOKEN)


bot.start((ctx) => {
  MainText(ctx)
});

const filePath = path.join(__dirname, 'ref.txt'); // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
const telegramIdFilePath = path.join(__dirname, 'telegramId.txt');

const checkUserTGId = (userId) => {
  const filePath = path.join(__dirname, 'telegramId.txt'); // –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É
  const ids = fs.readFileSync(filePath, 'utf-8').split('\n'); // –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç—Ä–æ–∫–∞–º
  return ids.includes(userId.toString().trim()); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è ID
};


  
  bot.action('main', (ctx) => {
   MainText(ctx)
  });

  bot.action('jet',(ctx)=>{
    const imagePath = path.join(__dirname, 'images', 'jetTg.jpg')
    ctx.replyWithPhoto({ source: imagePath })
    .then(() => {
      return ctx.replyWithHTML(
        'üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤</b> üî∏ <b>ABUZ LuckyJet</b> üî∏!\n\n' +
        'üöÄ <i>LuckyJet ‚Äî —ç—Ç–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∞—è –≥—ç–º–±–ª–∏–Ω–≥ –∏–≥—Ä–∞ –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ 1win</i>, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º ‚Äú–ö—Ä–∞—à–µ‚Äù.\n\n' +
        'üéØ –í–∞—à–∞ —Ü–µ–ª—å: –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à <b>—Ä–∞–Ω—å—à–µ</b>, —á–µ–º —Ä–∞–∫–µ—Ç–∞ —É–ª–µ—Ç–∏—Ç! üöÄ\n\n' +
        'ü§ñ –ù–∞—à –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –±–∞–∑–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ <b>ChatGPT-4</b> –∏ —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ <b>93%</b>!\n\n' +
        '‚ùóÔ∏è <i>–í–Ω–∏–º–∞–Ω–∏–µ:</i> –±–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç <b>—Ç–æ–ª—å–∫–æ</b> —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ 1win, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" –≤ –±–æ—Ç–µ.\n\n' +
        '‚úÖ <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?</b>\n' +
        '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>.\n' +
        '2. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–∞–∑–¥–µ–ª–æ–º <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b> –∏ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä–∞—Ç—å!',
        Markup.inlineKeyboard([
          [Markup.button.url('üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', urlJet)],  // –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞
          [Markup.button.callback('üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', 'instruction1')],                             // –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞
          [Markup.button.callback('üöÄ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª üöÄ', 'signalJet')],                               // –¢—Ä–µ—Ç—å—è –∫–Ω–æ–ø–∫–∞                  // –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–Ω–æ–ø–∫–∞
      ])
   )
    })
  })

  bot.action('mines',(ctx)=>{
    const imagePath = path.join(__dirname, 'images', 'intro_mines.jpg')
    ctx.replyWithPhoto({ source: imagePath })
    .then(() => {
      return ctx.replyWithHTML(
        'üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤</b> üî∏ <b>ABUZ Mines</b> üî∏!\n\n' +
        'üöÄ <i>MInes ‚Äî —ç—Ç–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∞—è –≥—ç–º–±–ª–∏–Ω–≥ –∏–≥—Ä–∞ –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ 1win</i>, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º ‚Äú–ö—Ä–∞—à–µ‚Äù.\n\n' +
        'üéØ –í–∞—à–∞ —Ü–µ–ª—å: –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à –æ—Ç–≥–∞–¥–∞—Ç—å –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—å—Å—è <b>–∑–≤–µ–∑–¥–æ—á–∫–∏</b>, –∞ –Ω–µ –º–∏–Ω—ã üöÄ\n\n' +
        'ü§ñ –ù–∞—à –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –±–∞–∑–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ <b>ChatGPT-4</b> –∏ —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ <b>93%</b>!\n\n' +
        '‚ùóÔ∏è <i>–í–Ω–∏–º–∞–Ω–∏–µ:</i> –±–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç <b>—Ç–æ–ª—å–∫–æ</b> —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ 1win, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" –≤ –±–æ—Ç–µ.\n\n' +
        '‚úÖ <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?</b>\n' +
        '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>.\n' +
        '2. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–∞–∑–¥–µ–ª–æ–º <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b> –∏ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä–∞—Ç—å!',
    Markup.inlineKeyboard([ 
          [Markup.button.url('üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', urlMines)],
          [Markup.button.callback('üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', 'instruction2')],
          [Markup.button.callback('üöÄ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª üöÄ', 'signalMines')], 
    ])
   )
    })
   })

   bot.action('instruction1',(ctx)=>{
    Instruction1(ctx)
   })

   bot.action('instruction2',(ctx)=>{
    Instruction2(ctx)
   })

// –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –±–æ—Ç –∂–¥–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID
let isWaitingForReferral = false;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
bot.action('check_registr', (ctx) => {
    const imagePath = path.join(__dirname, 'images', 'idWin.jpg'); 
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    ctx.replyWithPhoto({ source: imagePath })
      .then(() => {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        return ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:");
      })
      .then(() => {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ ID
        isWaitingForReferral = true;
      })
      .catch((err) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:', err);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', (ctx) => {
    if (!isWaitingForReferral) {
        // –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –∂–¥–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return;
    }

    const userMessage = ctx.message.text; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const telegramId = ctx.from.id;       // –ü–æ–ª—É—á–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const referalId = userMessage.trim(); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ ID

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –≤ —Ñ–∞–π–ª
    fs.appendFile(filePath, `${referalId}\n`, (err) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ ID:', err);
            ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID.');
        } else {
            console.log('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', referalId);
            ctx.reply('–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!',
                Markup.inlineKeyboard([
                    [Markup.button.callback('üöÄ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª LuckyJet üöÄ', 'signalJet')],
                    [Markup.button.callback('üöÄ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª Mines üöÄ', 'signalMines')],
                ])
            );
        }
    });

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª
    fs.appendFile(telegramIdFilePath, `${telegramId}\n`, (err) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ Telegram ID:', err);
        } else {
            console.log('Telegram ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', telegramId);
        }
    });

    // –û—Ç–∫–ª—é—á–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ ID
    isWaitingForReferral = false;
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏
function getRandomImagePathMines() {
    const imagesDir = path.join(__dirname, 'images/MinesSignal');
    const files = fs.readdirSync(imagesDir); // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
    const randomFile = files[Math.floor(Math.random() * files.length)]; // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–π–ª
    return path.join(imagesDir, randomFile); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Å–ª—É—á–∞–π–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
}

// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
const signalMessagesLuckyJet = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π

bot.action('signalJet', async (ctx) => {
  const userId = ctx.from.id;

  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (checkUserTGId(userId)) {
    try {
      // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∏–≥–Ω–∞–ª–æ–º, —É–¥–∞–ª—è–µ–º –µ–≥–æ
      if (signalMessagesLuckyJet[userId]) {

        try {
          // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∏–≥–Ω–∞–ª–æ–º

          await ctx.deleteMessage(signalMessagesLuckyJet[userId]);
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞:', error);
          // –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID
          signalMessagesLuckyJet[userId] = null;
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
      const loadingMessage = await ctx.reply('–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...');

      // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 3 —Å–µ–∫—É–Ω–¥—ã
      await new Promise(resolve => setTimeout(resolve, 3000));

      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
      await ctx.deleteMessage(loadingMessage.message_id);

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä –æ—Ç 500000 –¥–æ 999999
      const randomNumber = Math.floor(Math.random() * (895490 - 895439 + 1)) + 895439;
      const randomChange = Math.floor(Math.random() * (99 - 75 + 1)) + 75;

      // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Å–ª—É—á–∞–π–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
      const randomImagePath = getRandomImagePathLuckyJet();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      const newSignalMessage = await ctx.replyWithPhoto(
        { source: randomImagePath },
        { caption: `Game ‚Ññ ${randomNumber} \nChance: ${randomChange}%` }
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–∏–≥–Ω–∞–ª–æ–º
      signalMessagesLuckyJet[userId] = newSignalMessage.message_id;

    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã:', err);
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.');
    }
  } else {
    ctx.reply('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.',
      Markup.inlineKeyboard([
        [Markup.button.url('üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', urlJet)],
        [Markup.button.callback('üîô –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', 'check_registr')],
      ])
    );
  }
});

bot.action('signalMines', async (ctx) => {
  const userId = ctx.from.id;
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (checkUserTGId(userId)) {
    try {
      // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∏–≥–Ω–∞–ª–æ–º, —É–¥–∞–ª—è–µ–º –µ–≥–æ
      if (signalMessagesLuckyJet[userId]) {

        try {
          // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∏–≥–Ω–∞–ª–æ–º

          await ctx.deleteMessage(signalMessagesLuckyJet[userId]);
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞:', error);
          // –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID
          signalMessagesLuckyJet[userId] = null;
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
      const loadingMessage = await ctx.reply('–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...');

      // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 3 —Å–µ–∫—É–Ω–¥—ã
      await new Promise(resolve => setTimeout(resolve, 3000));

      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
      await ctx.deleteMessage(loadingMessage.message_id);

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä –æ—Ç 500000 –¥–æ 999999
      const randomNumber = Math.floor(Math.random() * (895490 - 895439 + 1)) + 895439;
      const randomChange = Math.floor(Math.random() * (99 - 75 + 1)) + 75;

      // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Å–ª—É—á–∞–π–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
      const randomImagePath = getRandomImagePathMines();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      const newSignalMessage = await ctx.replyWithPhoto(
        { source: randomImagePath },
        { caption: `Game ‚Ññ ${randomNumber} \nChance: ${randomChange}%` }
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–∏–≥–Ω–∞–ª–æ–º
      signalMessagesLuckyJet[userId] = newSignalMessage.message_id;

    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã:', err);
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.');
    }
  } else {
    ctx.reply('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.',
      Markup.inlineKeyboard([
        [Markup.button.url('üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', urlJet)],
        [Markup.button.callback('üîô –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', 'check_registr')],
      ])
    );
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏
function getRandomImagePathLuckyJet() {
  const imagesDir = path.join(__dirname, 'images/jetSignal');
  const files = fs.readdirSync(imagesDir); // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
  const randomFile = files[Math.floor(Math.random() * files.length)]; // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–π–ª
  return path.join(imagesDir, randomFile); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Å–ª—É—á–∞–π–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
}


app.use(express.json());

app.post(`/${BOT_TOKEN}`, (req, res) => {
  bot.handleUpdate(req.body);
  res.sendStatus(200);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±—Ö—É–∫
const webhookUrl = `${VERCEL_URL}/${BOT_TOKEN}`;

if (!process.env.VERCEL_URL) {
  console.error('–û—à–∏–±–∫–∞: VERCEL_URL –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Vercel.');
} else {
  bot.telegram.setWebhook(webhookUrl)
    .then(() => {
      console.log(`–í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookUrl}`);
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞:', err);
    });
}

function setupWebhook() {
  bot.telegram.getWebhookInfo()
    .then((info) => {
      if (info.url) {
        console.log(`–í–µ–±—Ö—É–∫ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${info.url}`);
      } else {
        bot.telegram.setWebhook(webhookUrl)
          .then(() => {
            console.log(`–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookUrl}`);
          })
          .catch((err) => {
            if (err.response && err.response.error_code === 429) {
              const retryAfter = err.response.parameters.retry_after;
              console.error(`–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ ${retryAfter} —Å–µ–∫—É–Ω–¥.`);
              setTimeout(() => {
                setupWebhook();  // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏
              }, retryAfter * 1000);
            } else {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞:', err);
            }
          });
      }
    })
    .catch((err) => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ:', err);
    });
}
bot.telegram.getWebhookInfo().then(info => {
  console.log(info);
});
setupWebhook();

app.post(`/${BOT_TOKEN}`, (req, res) => {
  bot.handleUpdate(req.body);
  res.sendStatus(200);
});

app.get('/', (req, res) => {
  res.send('–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç');
});

module.exports = app;


// bot.help((ctx) => ctx.reply('Send me a sticker'))
// bot.on(message('sticker'), (ctx) => ctx.reply('üëç'))
// bot.hears('hi', (ctx) => ctx.reply('Hey there'))
// botRef.launch();



// // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç–µ

// bot.launch(
// );
// // Enable graceful stop
// process.once('SIGINT', () => bot.stop('SIGINT'))
// process.once('SIGTERM', () => bot.stop('SIGTERM'))


